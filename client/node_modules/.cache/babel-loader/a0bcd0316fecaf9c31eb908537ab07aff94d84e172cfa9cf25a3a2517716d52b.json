{"ast":null,"code":"var _jsxFileName = \"/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const handleSearch = () => {\n    if (username && isVerified) {\n      navigate(`/rumor-type/${username}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n          setIsVerified(false);\n        },\n        placeholder: \"Enter username\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsVerified(true),\n        className: \"verify-button\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isVerified && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"C5tsX8K3dNriGHZAWLzPkdp3++4=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Search","_s","navigate","username","setUsername","isVerified","setIsVerified","handleSearch","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Search.css';\n\nfunction Search() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n\n  const handleSearch = () => {\n    if (username && isVerified) {\n      navigate(`/rumor-type/${username}`);\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"search-input-section\">\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n            setIsVerified(false);\n          }}\n          placeholder=\"Enter username\"\n          className=\"search-input\"\n        />\n        <button\n          onClick={() => setIsVerified(true)}\n          className=\"verify-button\"\n        >\n          Verify\n        </button>\n      </div>\n\n      {isVerified && (\n        <button\n          onClick={handleSearch}\n          className=\"search-button\"\n        >\n          Search\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Search; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIJ,QAAQ,IAAIE,UAAU,EAAE;MAC1BH,QAAQ,CAAC,eAAeC,QAAQ,EAAE,CAAC;IACrC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA;MAAKS,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCV,OAAA;QACEW,IAAI,EAAC,MAAM;QACXC,KAAK,EAAER,QAAS;QAChBS,QAAQ,EAAGC,CAAC,IAAK;UACfT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC3BL,aAAa,CAAC,KAAK,CAAC;QACtB,CAAE;QACFS,WAAW,EAAC,gBAAgB;QAC5BP,SAAS,EAAC;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFpB,OAAA;QACEqB,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAAC,IAAI,CAAE;QACnCE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC1B;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELd,UAAU,iBACTN,OAAA;MACEqB,OAAO,EAAEb,YAAa;MACtBC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1B;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA1CQD,MAAM;EAAA,QACIH,WAAW;AAAA;AAAAwB,EAAA,GADrBrB,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}