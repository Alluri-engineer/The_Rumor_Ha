{"ast":null,"code":"var _jsxFileName = \"/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport BackButton from '../components/BackButton';\nimport RoundedInput from '../components/RoundedInput';\nimport RoundedButton from '../components/RoundedButton';\nimport Toast from '../components/Toast';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [showRumorTypes, setShowRumorTypes] = useState(false);\n  const [toast, setToast] = useState(null);\n  const handleVerify = async () => {\n    if (!username.trim()) return;\n    try {\n      const response = await axios.get(`http://localhost:5000/api/users/${username}/exists`);\n      if (response.data.exists) {\n        setIsVerified(true);\n        setToast({\n          message: 'Username found!',\n          type: 'success'\n        });\n      } else {\n        setIsVerified(false);\n        setToast({\n          message: response.data.message,\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error verifying username:', error);\n      setToast({\n        message: 'Failed to verify username',\n        type: 'error'\n      });\n    }\n  };\n  const handleSearch = () => {\n    if (username && isVerified) {\n      setShowRumorTypes(true);\n    }\n  };\n  const handleRumorTypeSelect = type => {\n    navigate('/results', {\n      state: {\n        username,\n        type\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-section\",\n      children: [/*#__PURE__*/_jsxDEV(RoundedInput, {\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n          setIsVerified(false);\n          setShowRumorTypes(false);\n        },\n        placeholder: \"Enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundedButton, {\n        onClick: handleVerify,\n        color: isVerified ? \"#10B981\" : \"var(--surface)\",\n        textColor: isVerified ? \"white\" : \"var(--text)\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isVerified && !showRumorTypes && /*#__PURE__*/_jsxDEV(RoundedButton, {\n      onClick: handleSearch,\n      color: \"var(--primary)\",\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), showRumorTypes && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rumor-type-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(RoundedButton, {\n        onClick: () => handleRumorTypeSelect('about'),\n        color: \"#ff69b4\",\n        className: \"rumor-type-button\",\n        children: \"Rumor about him\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RoundedButton, {\n        onClick: () => handleRumorTypeSelect('with-others'),\n        color: \"#4169e1\",\n        className: \"rumor-type-button\",\n        children: \"Rumor with Others\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: toast.type,\n      onClose: () => setToast(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"re5TPyw98x+4BtHNBChcTeBMvTw=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","axios","BackButton","RoundedInput","RoundedButton","Toast","jsxDEV","_jsxDEV","Search","_s","navigate","username","setUsername","isVerified","setIsVerified","showRumorTypes","setShowRumorTypes","toast","setToast","handleVerify","trim","response","get","data","exists","message","type","error","console","handleSearch","handleRumorTypeSelect","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","color","textColor","onClose","_c","$RefreshReg$"],"sources":["/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport BackButton from '../components/BackButton';\nimport RoundedInput from '../components/RoundedInput';\nimport RoundedButton from '../components/RoundedButton';\nimport Toast from '../components/Toast';\nimport './Search.css';\n\nfunction Search() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [showRumorTypes, setShowRumorTypes] = useState(false);\n  const [toast, setToast] = useState(null);\n\n  const handleVerify = async () => {\n    if (!username.trim()) return;\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/users/${username}/exists`);\n      \n      if (response.data.exists) {\n        setIsVerified(true);\n        setToast({\n          message: 'Username found!',\n          type: 'success'\n        });\n      } else {\n        setIsVerified(false);\n        setToast({\n          message: response.data.message,\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error verifying username:', error);\n      setToast({\n        message: 'Failed to verify username',\n        type: 'error'\n      });\n    }\n  };\n\n  const handleSearch = () => {\n    if (username && isVerified) {\n      setShowRumorTypes(true);\n    }\n  };\n\n  const handleRumorTypeSelect = (type) => {\n    navigate('/results', {\n      state: {\n        username,\n        type,\n      }\n    });\n  };\n\n  return (\n    <div className=\"search-container\">\n      <BackButton />\n      <div className=\"search-input-section\">\n        <RoundedInput\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n            setIsVerified(false);\n            setShowRumorTypes(false);\n          }}\n          placeholder=\"Enter username\"\n        />\n        <RoundedButton\n          onClick={handleVerify}\n          color={isVerified ? \"#10B981\" : \"var(--surface)\"}\n          textColor={isVerified ? \"white\" : \"var(--text)\"}\n        >\n          Verify\n        </RoundedButton>\n      </div>\n\n      {isVerified && !showRumorTypes && (\n        <RoundedButton\n          onClick={handleSearch}\n          color=\"var(--primary)\"\n          className=\"search-button\"\n        >\n          Search\n        </RoundedButton>\n      )}\n\n      {showRumorTypes && (\n        <div className=\"rumor-type-buttons\">\n          <RoundedButton\n            onClick={() => handleRumorTypeSelect('about')}\n            color=\"#ff69b4\"\n            className=\"rumor-type-button\"\n          >\n            Rumor about him\n          </RoundedButton>\n          \n          <RoundedButton\n            onClick={() => handleRumorTypeSelect('with-others')}\n            color=\"#4169e1\"\n            className=\"rumor-type-button\"\n          >\n            Rumor with Others\n          </RoundedButton>\n        </div>\n      )}\n\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Search; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}