{"ast":null,"code":"var _jsxFileName = \"/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport BackButton from '../components/BackButton';\nimport RoundedInput from '../components/RoundedInput';\nimport RoundedButton from '../components/RoundedButton';\nimport Toast from '../components/Toast';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [usernames, setUsernames] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [toast, setToast] = useState(null);\n  const [verificationStatus, setVerificationStatus] = useState(null);\n  const handleVerify = async () => {\n    if (!username.trim()) return;\n    try {\n      const response = await axios.get(`http://localhost:5000/api/users/${username}/exists`);\n      setVerificationStatus(response.data.exists ? 'exists' : 'new');\n      setIsVerified(true);\n    } catch (error) {\n      console.error('Error verifying username:', error);\n      setToast({\n        message: 'Failed to verify username',\n        type: 'error'\n      });\n    }\n  };\n  const handleAddUsername = () => {\n    if (username && isVerified && !usernames.includes(username)) {\n      setUsernames([...usernames, username]);\n      setUsername('');\n      setIsVerified(false);\n      setVerificationStatus(null);\n      setToast({\n        message: 'Username added successfully!',\n        type: 'success'\n      });\n    }\n  };\n  const handleRemoveUsername = usernameToRemove => {\n    setUsernames(usernames.filter(u => u !== usernameToRemove));\n  };\n  const handlePost = async () => {\n    if (usernames.length > 0 && message) {\n      try {\n        await axios.post('http://localhost:5000/api/rumors', {\n          message,\n          usernames\n        });\n        setToast({\n          message: 'Rumor posted successfully!',\n          type: 'success'\n        });\n        setTimeout(() => navigate('/'), 1500);\n      } catch (error) {\n        console.error('Error posting rumor:', error);\n        setToast({\n          message: 'Failed to post rumor. Please try again.',\n          type: 'error'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(RoundedInput, {\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n            setIsVerified(false);\n            setVerificationStatus(null);\n          },\n          placeholder: \"Enter username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundedButton, {\n          onClick: handleVerify,\n          color: isVerified ? \"#10B981\" : \"var(--surface)\",\n          textColor: isVerified ? \"white\" : \"var(--text)\",\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), isVerified && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddUsername,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), verificationStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `verification-status ${verificationStatus}`,\n        children: verificationStatus === 'exists' ? 'Username exists in database' : 'New username'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), usernames.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usernames-list\",\n        children: usernames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username-tag\",\n          onClick: () => handleRemoveUsername(name),\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), (isVerified || usernames.length > 0) && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Enter your rumor message\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), message.trim() && (usernames.length > 0 || isVerified) && /*#__PURE__*/_jsxDEV(RoundedButton, {\n        onClick: handlePost,\n        color: \"var(--primary)\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: toast.type,\n      onClose: () => setToast(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"iaHRLrpJIchZPrBjOJzBgUIwUxs=\", false, function () {\n  return [useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useNavigate","axios","BackButton","RoundedInput","RoundedButton","Toast","jsxDEV","_jsxDEV","Post","_s","navigate","username","setUsername","usernames","setUsernames","message","setMessage","isVerified","setIsVerified","toast","setToast","verificationStatus","setVerificationStatus","handleVerify","trim","response","get","data","exists","error","console","type","handleAddUsername","includes","handleRemoveUsername","usernameToRemove","filter","u","handlePost","length","post","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","color","textColor","map","name","index","onClose","_c","$RefreshReg$"],"sources":["/Users/allurisantoshvarma/Documents/GitHub/The_Rumor_Ha/client/src/pages/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport BackButton from '../components/BackButton';\nimport RoundedInput from '../components/RoundedInput';\nimport RoundedButton from '../components/RoundedButton';\nimport Toast from '../components/Toast';\nimport './Post.css';\n\nfunction Post() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [usernames, setUsernames] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [toast, setToast] = useState(null);\n  const [verificationStatus, setVerificationStatus] = useState(null);\n\n  const handleVerify = async () => {\n    if (!username.trim()) return;\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/users/${username}/exists`);\n      setVerificationStatus(response.data.exists ? 'exists' : 'new');\n      setIsVerified(true);\n    } catch (error) {\n      console.error('Error verifying username:', error);\n      setToast({\n        message: 'Failed to verify username',\n        type: 'error'\n      });\n    }\n  };\n\n  const handleAddUsername = () => {\n    if (username && isVerified && !usernames.includes(username)) {\n      setUsernames([...usernames, username]);\n      setUsername('');\n      setIsVerified(false);\n      setVerificationStatus(null);\n      setToast({\n        message: 'Username added successfully!',\n        type: 'success'\n      });\n    }\n  };\n\n  const handleRemoveUsername = (usernameToRemove) => {\n    setUsernames(usernames.filter(u => u !== usernameToRemove));\n  };\n\n  const handlePost = async () => {\n    if (usernames.length > 0 && message) {\n      try {\n        await axios.post('http://localhost:5000/api/rumors', {\n          message,\n          usernames\n        });\n        setToast({\n          message: 'Rumor posted successfully!',\n          type: 'success'\n        });\n        setTimeout(() => navigate('/'), 1500);\n      } catch (error) {\n        console.error('Error posting rumor:', error);\n        setToast({\n          message: 'Failed to post rumor. Please try again.',\n          type: 'error'\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"post-container\">\n      <BackButton />\n      <div className=\"post-content\">\n        <div className=\"username-input-section\">\n          <RoundedInput\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value);\n              setIsVerified(false);\n              setVerificationStatus(null);\n            }}\n            placeholder=\"Enter username\"\n          />\n          <RoundedButton\n            onClick={handleVerify}\n            color={isVerified ? \"#10B981\" : \"var(--surface)\"}\n            textColor={isVerified ? \"white\" : \"var(--text)\"}\n          >\n            Verify\n          </RoundedButton>\n          {isVerified && (\n            <button className=\"add-button\" onClick={handleAddUsername}>\n              +\n            </button>\n          )}\n        </div>\n\n        {verificationStatus && (\n          <div className={`verification-status ${verificationStatus}`}>\n            {verificationStatus === 'exists' ? 'Username exists in database' : 'New username'}\n          </div>\n        )}\n\n        {usernames.length > 0 && (\n          <div className=\"usernames-list\">\n            {usernames.map((name, index) => (\n              <div\n                key={index}\n                className=\"username-tag\"\n                onClick={() => handleRemoveUsername(name)}\n              >\n                {name}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {(isVerified || usernames.length > 0) && (\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Enter your rumor message\"\n            className=\"message-input\"\n          />\n        )}\n\n        {message.trim() && (usernames.length > 0 || isVerified) && (\n          <RoundedButton\n            onClick={handlePost}\n            color=\"var(--primary)\"\n          >\n            Post\n          </RoundedButton>\n        )}\n      </div>\n\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Post; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}